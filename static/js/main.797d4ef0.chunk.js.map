{"version":3,"sources":["images/friend.png","components/Navigation.js","components/FormContainer.js","components/ToDoItem.js","components/ToDoContainer.js","components/ToDonesContainer.js","components/Spinner.js","components/NotFound.js","components/MainContainer.js","components/Article.js","components/NewsContainer.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","to","activeClassName","React","Component","FormContainer","props","state","value","handleChange","bind","handleSubmit","e","this","setState","target","preventDefault","addTodo","className","onSubmit","type","name","onChange","ToDoItem","data","text","onClick","item","handleUpdate","status","ToDoContainer","updateItem","id","updateFromChild","items","todoItems","map","el","key","_id","length","src","friend","alt","ToDonesContainer","todoneItems","Spinner","NotFound","MainContainer","a","async","url","loading","fetch","method","headers","body","JSON","stringify","response","json","updatedItems","feedback","handleAddTodo","showFriend","todos","filter","todones","Article","article","window","open","urlToImage","title","description","NewsContainer","articles","articleList","publishedAt","breakpointCols","default","1100","700","500","columnClassName","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.797d4ef0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/friend.e0c7b1d5.png\";","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nclass Navigation extends React.Component {\n  render() {\n    return (\n      <nav>\n        <NavLink to=\"/\">\n          <h1>TODO APP</h1>\n        </NavLink>\n        <ul>\n          <li>\n            <NavLink to=\"/\" activeClassName=\"selected\">\n              Home\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/news\" activeClassName=\"selected\">\n              News\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Navigation;\n","import React from \"react\";\n\nclass FormContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: \"\" };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ value: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.addTodo(this.state.value);\n    this.setState({ value: \"\" });\n  }\n\n  render() {\n    return (\n      <div className=\"form-container\">\n        <form className=\"todo-form\" onSubmit={this.handleSubmit}>\n          <label className=\"input-item\">\n            <input\n              type=\"text\"\n              name=\"todo\"\n              onChange={this.handleChange}\n              value={this.state.value}\n            />\n          </label>\n          <input className=\"btn\" type=\"submit\" value=\"ADD\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default FormContainer;\n","import React from \"react\";\n\nconst ToDoItem = props => {\n  function updateItem(e) {\n    e.preventDefault();\n    const item = props.data;\n    props.handleUpdate(item);\n  }\n\n  return (\n    <div className=\"item\">\n      <p>{props.data.text}</p>\n      <button className=\"btn\" onClick={updateItem}>\n        {props.data.status ? \"☑\" : \"☐\"}\n      </button>\n    </div>\n  );\n};\n\nexport default ToDoItem;\n","import React from \"react\";\nimport ToDoItem from \"./ToDoItem\";\nimport friend from \"../images/friend.png\";\n\nclass ToDoContainer extends React.Component {\n  updateItem = id => {\n    this.props.updateFromChild(id);\n  };\n\n  render() {\n    const data = this.props.items;\n    const todoItems = data.map(el => {\n      return (\n        <ToDoItem\n          key={el._id}\n          data={el}\n          handleUpdate={this.updateItem}\n        ></ToDoItem>\n      );\n    });\n\n    return (\n      <div className=\"todos-container\">\n        {data.length > 0 ? (\n          <div className=\"todos\">\n            <h5>TODOS</h5>\n            {todoItems}\n          </div>\n        ) : (\n          <div className=\"todos\">\n            <h5>TODOS</h5>\n            <img src={friend} alt=\"\"></img>\n            <p>Use the form to create a new todo!</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ToDoContainer;\n","import React from \"react\";\nimport ToDoItem from \"./ToDoItem\";\n\nclass ToDonesContainer extends React.Component {\n  updateItem = id => {\n    this.props.updateFromChild(id);\n  };\n\n  render() {\n    const data = this.props.items;\n\n    const todoneItems = data.map(el => {\n      return (\n        <ToDoItem\n          key={el._id}\n          data={el}\n          handleUpdate={this.updateItem}\n        ></ToDoItem>\n      );\n    });\n\n    return (\n      <div className=\"todones-container\">\n        {data.length > 0 && (\n          <div className=\"todones\">\n            <h5>BACKLOG</h5>\n            {todoneItems}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ToDonesContainer;\n","import React from \"react\";\n\nconst Spinner = () => {\n  return <div className=\"spinner\"></div>;\n};\n\nexport default Spinner;\n","import React from \"react\";\nimport friend from \"../images/friend.png\";\n\nconst NotFound = () => {\n  return (\n    <div className=\"empty-screen\">\n      <img src={friend}></img>\n      <p>Use the form to create a new todo!</p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport FormContainer from \"./FormContainer\";\nimport ToDoContainer from \"./ToDoContainer\";\nimport ToDonesContainer from \"./ToDonesContainer\";\nimport Spinner from \"./Spinner\";\nimport NotFound from \"./NotFound\";\n\nclass MainContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      loading: true,\n      feedback: false,\n      showFriend: false\n    };\n  }\n\n  async componentDidMount() {\n    const url = `https://todo-api.albertedelmann.now.sh/tasks`;\n    // const url = `https://ds-todo-api.now.sh/todos`;\n\n    // fetch(url).then(response => {\n    //   response.json().then(data => {\n    //     this.setState({ items: data });\n    //   });\n    // });\n\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      if (data.length === 0)\n        this.setState({\n          items: data,\n          loading: false,\n          feedback: false,\n          showFriend: true\n        });\n      else {\n        this.setState({\n          items: data,\n          loading: false,\n          feedback: false,\n          showFriend: false\n        });\n      }\n    } catch (error) {\n      this.setState({ feedback: true });\n    }\n  }\n\n  handleUpdate = async item => {\n    const url = `https://todo-api.albertedelmann.now.sh/tasks/${item._id}`;\n    const status = !item.status;\n    this.setState({ loading: true });\n    try {\n      const response = await fetch(url, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({ status })\n      });\n      const data = await response.json();\n      const items = this.state.items;\n      const updatedItems = items.map(el => {\n        if (item._id === el._id) {\n          el.status = !el.status;\n        }\n        return el;\n      });\n\n      this.setState({\n        items: updatedItems,\n        loading: false,\n        feedback: false\n      });\n    } catch (error) {\n      this.setState({ feedback: true });\n    }\n  };\n\n  handleAddTodo = async value => {\n    const url = `https://todo-api.albertedelmann.now.sh/tasks`;\n    this.setState({ loading: true });\n\n    try {\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({ text: value })\n      });\n      const item = await response.json();\n      this.setState({\n        items: [...this.state.items, item],\n        feedback: false,\n        showFriend: false,\n        loading: false\n      });\n    } catch (error) {\n      this.setState({ feedback: true });\n    }\n  };\n\n  render() {\n    const data = this.state.items;\n    const todos = data.filter(el => !el.status);\n    const todones = data.filter(el => el.status);\n\n    return (\n      <main className=\"main-container\">\n        <FormContainer addTodo={this.handleAddTodo}></FormContainer>\n        <div className=\"feedback\">\n          {this.state.feedback && (\n            <small>Oops, our cat broke the internet. Please try again...</small>\n          )}\n        </div>\n        {this.state.loading && <Spinner></Spinner>}\n        {!this.state.showFriend ? (\n          <span>\n            <ToDoContainer\n              items={todos}\n              updateFromChild={this.handleUpdate}\n            ></ToDoContainer>\n            <ToDonesContainer\n              items={todones}\n              updateFromChild={this.handleUpdate}\n            ></ToDonesContainer>\n          </span>\n        ) : (\n          <NotFound></NotFound>\n        )}\n      </main>\n    );\n  }\n}\n\nexport default MainContainer;\n","import React from \"react\";\n\nconst Article = props => {\n  const article = props.article;\n  const friend =\n    \"https://media0.giphy.com/media/OI8TsOa9KFAPu/giphy.gif?cid=790b76116ff1b97ce66612fdfbc17f90abfb14f8d9ec70c8&rid=giphy.gif\";\n\n  function openArticle(url) {\n    window.open(url, \"_blank\");\n  }\n\n  return (\n    <div className=\"article\" onClick={() => openArticle(article.url)}>\n      <div className=\"img\">\n        {article.urlToImage ? (\n          <img src={article.urlToImage}></img>\n        ) : (\n          <img src={friend}></img>\n        )}\n      </div>\n      <div className=\"info\">\n        <p className=\"title\">{article.title}</p>\n        <p>{article.description}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Article;\n","import React from \"react\";\nimport Masonry from \"react-masonry-css\";\nimport Article from \"./Article\";\nimport Spinner from \"./Spinner\";\n\nclass NewsContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      articles: []\n    };\n  }\n\n  async componentDidMount() {\n    let url = `https://newsapi.org/v2/everything?domains=nationalgeographic.com&apiKey=f8d7869212c24907bc585db6b6d267be`;\n\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({ articles: data.articles });\n  }\n\n  render() {\n    const articleList = this.state.articles.map(el => (\n      <Article article={el} key={el.publishedAt}></Article>\n    ));\n\n    const myBreakPoints = {\n      default: 4,\n      1100: 3,\n      700: 2,\n      500: 1\n    };\n\n    return (\n      <Masonry\n        breakpointCols={myBreakPoints}\n        className=\"news-container\"\n        columnClassName=\"col\"\n      >\n        {articleList.length > 0 ? articleList : <Spinner></Spinner>}\n      </Masonry>\n    );\n  }\n}\nexport default NewsContainer;\n","import React from \"react\";\nimport \"../css/App.scss\";\nimport Navigation from \"./Navigation\";\nimport MainContainer from \"./MainContainer\";\nimport NotFound from \"./NotFound\";\nimport NewsContainer from \"./NewsContainer\";\nimport { Switch, Route, BrowserRouter } from \"react-router-dom\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"app\">\n          <Navigation></Navigation>\n          <Switch>\n            <Route exact path=\"/news\" component={NewsContainer}></Route>\n            <Route exact path=\"/\" component={MainContainer} />\n            <Route path=\"*\" component={NotFound}></Route>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( < App / > , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}